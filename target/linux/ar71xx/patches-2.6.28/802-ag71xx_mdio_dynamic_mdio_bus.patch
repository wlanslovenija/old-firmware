--- a/drivers/net/ag71xx/ag71xx_mdio.c
+++ b/drivers/net/ag71xx/ag71xx_mdio.c
@@ -57,7 +57,7 @@ static int ag71xx_mdio_mii_read(struct a
 	while (ag71xx_mdio_rr(am, AG71XX_REG_MII_IND) & MII_IND_BUSY) {
 		if (i-- == 0) {
 			printk(KERN_ERR "%s: mii_read timed out\n",
-				am->mii_bus.name);
+				am->mii_bus->name);
 			ret = 0xffff;
 			goto out;
 		}
@@ -88,7 +88,7 @@ static void ag71xx_mdio_mii_write(struct
 	while (ag71xx_mdio_rr(am, AG71XX_REG_MII_IND) & MII_IND_BUSY) {
 		if (i-- == 0) {
 			printk(KERN_ERR "%s: mii_write timed out\n",
-				am->mii_bus.name);
+				am->mii_bus->name);
 			break;
 		}
 		udelay(AG71XX_MDIO_DELAY);
@@ -154,23 +154,27 @@ static int __init ag71xx_mdio_probe(stru
 		goto err_free_mdio;
 	}
 
-	am->mii_bus.name = "ag71xx_mdio";
-	am->mii_bus.read = ag71xx_mdio_read;
-	am->mii_bus.write = ag71xx_mdio_write;
-	am->mii_bus.reset = ag71xx_mdio_reset;
-	am->mii_bus.irq = am->mii_irq;
-	am->mii_bus.priv = am;
-	am->mii_bus.parent = &pdev->dev;
-	snprintf(am->mii_bus.id, MII_BUS_ID_SIZE, "%x", 0);
+	am->mii_bus = mdiobus_alloc();
+	if (am->mii_bus == NULL)
+		goto err_iounmap;
+
+	am->mii_bus->name = "ag71xx_mdio";
+	am->mii_bus->read = ag71xx_mdio_read;
+	am->mii_bus->write = ag71xx_mdio_write;
+	am->mii_bus->reset = ag71xx_mdio_reset;
+	am->mii_bus->irq = am->mii_irq;
+	am->mii_bus->priv = am;
+	am->mii_bus->parent = &pdev->dev;
+	snprintf(am->mii_bus->id, MII_BUS_ID_SIZE, "%x", 0);
 
 	pdata = pdev->dev.platform_data;
 	if (pdata)
-		am->mii_bus.phy_mask = pdata->phy_mask;
+		am->mii_bus->phy_mask = pdata->phy_mask;
 
 	for (i = 0; i < PHY_MAX_ADDR; i++)
 		am->mii_irq[i] = PHY_POLL;
 
-	err = mdiobus_register(&am->mii_bus);
+	err = mdiobus_register(am->mii_bus);
 	if (err)
 		goto err_iounmap;
 
@@ -194,7 +198,8 @@ static int __exit ag71xx_mdio_remove(str
 
 	if (am) {
 		ag71xx_mdio_bus = NULL;
-		mdiobus_unregister(&am->mii_bus);
+		mdiobus_unregister(am->mii_bus);
+		mdiobus_free(am->mii_bus);
 		iounmap(am->mdio_base);
 		kfree(am);
 		platform_set_drvdata(pdev, NULL);
--- a/drivers/net/ag71xx/ag71xx.h
+++ b/drivers/net/ag71xx/ag71xx.h
@@ -102,7 +102,7 @@ struct ag71xx_ring {
 };
 
 struct ag71xx_mdio {
-	struct mii_bus	mii_bus;
+	struct mii_bus	*mii_bus;
 	int		mii_irq[PHY_MAX_ADDR];
 	void __iomem	*mdio_base;
 };
--- a/drivers/net/ag71xx/ag71xx_main.c
+++ b/drivers/net/ag71xx/ag71xx_main.c
@@ -797,7 +797,7 @@ static int __init ag71xx_probe(struct pl
 	ag = netdev_priv(dev);
 	ag->pdev = pdev;
 	ag->dev = dev;
-	ag->mii_bus = &ag71xx_mdio_bus->mii_bus;
+	ag->mii_bus = ag71xx_mdio_bus->mii_bus;
 	ag->msg_enable = netif_msg_init(ag71xx_debug,
 					AG71XX_DEFAULT_MSG_ENABLE);
 	spin_lock_init(&ag->lock);
