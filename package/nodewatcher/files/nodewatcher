#!/bin/sh -e
#
# NodeWatcher cgi-bin script
# 

# Configuration
SOLAR_MEASURE_CACHE="/var/nodewatcher.solar_measure"

#
# A helper function for outputing key-value pairs in proper
# format.
#
show_entry()
{
  KEY="$1"
  VALUE="$2"
  
  echo "${KEY}: ${VALUE}"
}

#
# Displays general statistics about a node such as firmware version,
# local time, uptime, bssid, essid, channel.
#
general_stats()
{
  # System stuff
  show_entry "general.version" "`cat /etc/version`"
  show_entry "general.local_time" "`date +%s`"
  show_entry "general.uptime" "`cat /proc/uptime`"
  show_entry "general.loadavg" "`cat /proc/loadavg`"
  show_entry "general.memfree" "`cat /proc/meminfo | awk '/^MemFree/ { print $2 }'`"
  show_entry "general.buffers" "`cat /proc/meminfo | awk '/^Buffers/ { print $2 }'`"
  show_entry "general.cached" "`cat /proc/meminfo | awk '/^Cached/ { print $2 }'`"
  
  # Wireless parameters
  show_entry "wifi.bssid" "`iwconfig 2>/dev/null | grep Cell | awk '{ print $5 }'`"
  show_entry "wifi.essid" "`iwconfig 2>/dev/null | grep ESSID | awk '{ split($4, a, \"\\"\"); printf(\"%s\", a[2]); }'`"
  show_entry "wifi.frequency" "`iwconfig 2>/dev/null | grep Frequency | awk '{ print $2 }' | cut -d ':' -f 2 | head -n 1`"
}

#
# Displays traffic statistics for each network interface found.
#
traffic_stats()
{
  IFACES=`cat /proc/net/dev | awk -F: '!/\|/ { gsub(/[[:space:]]*/, "", $1); split($2, a, " "); printf("%s=%s=%s ", $1, a[1], a[9]) }'`
  
  # Output entries for each interface
  for entry in $IFACES; do
    iface=`echo $entry | cut -d '=' -f 1`
    rcv=`echo $entry | cut -d '=' -f 2`
    xmt=`echo $entry | cut -d '=' -f 3`
    
    if [[ "$iface" != "lo" && "$iface" != "wmaster0" ]]; then
      show_entry "iface.${iface}.down" $rcv
      show_entry "iface.${iface}.up" $xmt
    fi
  done
}

#
# Displays nodogsplash client statistics when available.
#
nds_stats()
{
  /usr/bin/ndsctl -s /var/run/nodogsplash.sock clients | awk -f /etc/nodewatcher/parse_nds.awk
}

#
# Displays current solar module status when available.
#
solar_stats()
{
  if [ -f $SOLAR_MEASURE_CACHE ]; then
    cat $SOLAR_MEASURE_CACHE
  else
    solar_measure_stats > $SOLAR_MEASURE_CACHE
    cat $SOLAR_MEASURE_CACHE
  fi
}

solar_measure_stats()
{
  STATS="batvoltage solvoltage charge load state"
  if [ -c /dev/ttyS1 ]; then
    DEVICE="/dev/ttyS1"
  else
    DEVICE="/dev/tts/1"
  fi
  
  for entry in $STATS; do
    show_entry "solar.${entry}" "`/usr/bin/solar -d ${DEVICE} -b 9600 -p ${entry} 2> /dev/null`"
  done
}

# Arguments
mode="$1"

if [ "$mode" == "" ]; then
  # Output header and then all supported statistics
  echo ";"
  echo "; wlan ljubljana NodeWatcher Script"
  echo ";"
  
  general_stats
  traffic_stats
  
  # Check for nodogsplash support
  if [ -x /usr/bin/ndsctl ]; then
    nds_stats
  fi
  
  # Check for solar support
  if [ -x /usr/bin/solar ]; then
    solar_stats
  fi
elif [ "$mode" == "solar_measure" ]; then
  # Check for solar support
  if [ -x /usr/bin/solar ]; then
    solar_measure_stats > $SOLAR_MEASURE_CACHE
  fi
fi
