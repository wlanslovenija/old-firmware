diff -r -u nodogsplash-0.9_beta9.8.orig/src/ndsctl.c nodogsplash-0.9_beta9.8/src/ndsctl.c
--- nodogsplash-0.9_beta9.8.orig/src/ndsctl.c	2007-12-30 18:45:39.000000000 +0100
+++ nodogsplash-0.9_beta9.8/src/ndsctl.c	2008-04-04 17:25:19.000000000 +0200
@@ -50,6 +50,7 @@
 static int connect_to_server(char *);
 static int send_request(int, char *);
 static void ndsctl_status(void);
+static void ndsctl_clients(void);
 static void ndsctl_stop(void);
 static void ndsctl_restart(void);
 static void ndsctl_block(void);
@@ -79,6 +80,7 @@
   printf("\n");
   printf("commands:\n");
   printf("  status            View the status of nodogsplash\n");
+  printf("  clients           Display machine-readable client list\n");
   printf("  stop              Stop the running nodogsplash\n");
   printf("  auth ip           Authenticate user with specified ip\n");
   printf("  deauth mac|ip     Deauthenticate user with specified mac or ip\n");
@@ -142,6 +144,9 @@
   if (strcmp(*(argv + optind), "status") == 0) {
     config.command = NDSCTL_STATUS;
   }
+  else if (strcmp(*(argv + optind), "clients") == 0) {
+    config.command = NDSCTL_CLIENTS;
+  }
 
   else if (strcmp(*(argv + optind), "stop") == 0) {
     config.command = NDSCTL_STOP;
@@ -301,6 +306,29 @@
 }
 
 static void
+ndsctl_clients(void) {
+  int sock;
+  char buffer[4096];
+  char request[16];
+  int len;
+
+  sock = connect_to_server(config.socket);
+		
+  strncpy(request, "clients\r\n\r\n", 15);
+
+  len = send_request(sock, request);
+	
+  while ((len = read(sock, buffer, sizeof(buffer))) > 0) {
+    buffer[len] = '\0';
+    printf("%s", buffer);
+  }
+
+  shutdown(sock, 2);
+  close(sock);
+
+}
+
+static void
 ndsctl_status(void) {
   int	sock;
   char	buffer[4096];
@@ -777,6 +805,10 @@
   case NDSCTL_STATUS:
     ndsctl_status();
     break;
+
+  case NDSCTL_CLIENTS:
+    ndsctl_clients();
+    break;
 	
   case NDSCTL_STOP:
     ndsctl_stop();
diff -r -u nodogsplash-0.9_beta9.8.orig/src/ndsctl.h nodogsplash-0.9_beta9.8/src/ndsctl.h
--- nodogsplash-0.9_beta9.8.orig/src/ndsctl.h	2007-12-30 19:12:47.000000000 +0100
+++ nodogsplash-0.9_beta9.8/src/ndsctl.h	2008-04-04 16:34:19.000000000 +0200
@@ -46,6 +46,7 @@
 #define NDSCTL_LOGLEVEL		13
 #define NDSCTL_PASSWORD		14
 #define NDSCTL_USERNAME		15
+#define NDSCTL_CLIENTS 16
 
 typedef struct {
 	char	*socket;
diff -r -u nodogsplash-0.9_beta9.8.orig/src/ndsctl_thread.c nodogsplash-0.9_beta9.8/src/ndsctl_thread.c
--- nodogsplash-0.9_beta9.8.orig/src/ndsctl_thread.c	2008-01-02 01:01:41.000000000 +0100
+++ nodogsplash-0.9_beta9.8/src/ndsctl_thread.c	2008-04-04 16:38:45.000000000 +0200
@@ -61,6 +61,7 @@
 
 static void *thread_ndsctl_handler(void *);
 static void ndsctl_status(int);
+static void ndsctl_clients(int);
 static void ndsctl_stop(int);
 static void ndsctl_block(int, char *);
 static void ndsctl_unblock(int, char *);
@@ -191,6 +192,8 @@
 
   if (strncmp(request, "status", 6) == 0) {
     ndsctl_status(fd);
+  } else if (strncmp(request, "clients", 7) == 0) {
+    ndsctl_clients(fd);
   } else if (strncmp(request, "stop", 4) == 0) {
     ndsctl_stop(fd);
   } else if (strncmp(request, "block", 5) == 0) {
@@ -248,6 +251,19 @@
   free(status);
 }
 
+static void
+ndsctl_clients(int fd) {
+  char * status = NULL;
+  int len = 0;
+
+  status = get_clients_text();
+  len = strlen(status);
+
+  write(fd, status, len);
+
+  free(status);
+}
+
 /** A bit of an hack, self kills.... */
 static void
 ndsctl_stop(int fd) {
diff -r -u nodogsplash-0.9_beta9.8.orig/src/util.c nodogsplash-0.9_beta9.8/src/util.c
--- nodogsplash-0.9_beta9.8.orig/src/util.c	2008-04-04 08:07:38.000000000 +0200
+++ nodogsplash-0.9_beta9.8/src/util.c	2008-04-04 17:25:40.000000000 +0200
@@ -513,3 +513,76 @@
   
   return safe_strdup(buffer);
 }
+
+/*
+ * @return A string containing machine-readable clients list.
+ * MUST BE free()d by caller
+ */
+char * get_clients_text() {
+  char buffer[STATUS_BUF_SIZ];
+  ssize_t len;
+  t_client *client;
+  int	   indx;
+  unsigned long int now, durationsecs = 0;
+  unsigned long long int download_bytes, upload_bytes;
+	
+  now = time(NULL);
+  len = 0;
+
+  /* Update the client's counters so info is current */
+  iptables_fw_counters_update();
+  
+
+  LOCK_CLIENT_LIST();
+	
+  snprintf((buffer + len), (sizeof(buffer) - len), "%d\n", get_client_list_length());
+  len = strlen(buffer);
+
+  client = client_get_first_client();
+  if(client) {
+    snprintf((buffer + len), (sizeof(buffer) - len), "\n");
+    len = strlen(buffer);
+  }
+  indx = 0;
+  while (client != NULL) {
+    snprintf((buffer + len), (sizeof(buffer) - len), "client_id=%d\n", indx);
+    len = strlen(buffer);
+
+    snprintf((buffer + len), (sizeof(buffer) - len), "ip=%s\nmac=%s\n", client->ip, client->mac);
+    len = strlen(buffer);
+
+    snprintf((buffer + len), (sizeof(buffer) - len), "added=%d\n", client->added_time);
+    len = strlen(buffer);
+
+    snprintf((buffer + len), (sizeof(buffer) - len), "active=%d\n", client->counters.last_updated);
+    len = strlen(buffer);
+
+    snprintf((buffer + len), (sizeof(buffer) - len), "duration=%d\n", now - client->added_time);
+    len = strlen(buffer);
+
+    snprintf((buffer + len), (sizeof(buffer) - len), "token=%s\n", client->token ? client->token : "none");
+    len = strlen(buffer);
+
+    snprintf((buffer + len), (sizeof(buffer) - len), "state=%s\n",
+	     fw_connection_state_as_string(client->fw_connection_state));
+    len = strlen(buffer);
+
+    durationsecs = now - client->added_time;
+    download_bytes = client->counters.incoming;
+    upload_bytes = client->counters.outgoing;
+
+    snprintf((buffer + len), (sizeof(buffer) - len),
+	     "downloaded=%llu\navg_down_speed=%.6g\nuploaded=%llu\navg_up_speed=%.6g\n\n",
+	     download_bytes/1000, ((double)download_bytes)/125/durationsecs,
+	     upload_bytes/1000, ((double)upload_bytes)/125/durationsecs);
+    len = strlen(buffer);
+
+    indx++;
+    client = client->next;
+  }
+
+  UNLOCK_CLIENT_LIST();
+  
+  return safe_strdup(buffer);
+}
+
diff -r -u nodogsplash-0.9_beta9.8.orig/src/util.h nodogsplash-0.9_beta9.8/src/util.h
--- nodogsplash-0.9_beta9.8.orig/src/util.h	2008-01-25 23:32:12.000000000 +0100
+++ nodogsplash-0.9_beta9.8/src/util.h	2008-04-04 16:39:29.000000000 +0200
@@ -65,6 +65,10 @@
  * @brief Creates a human-readable paragraph of the status of the nodogsplash process
  */
 char * get_status_text();
+/*
+ * @brief Creates a machine-readable dump of currently connected clients
+ */
+char * get_clients_text();
 
 #define LOCK_GHBN() do { \
 	debug(LOG_DEBUG, "Locking wd_gethostbyname()"); \
