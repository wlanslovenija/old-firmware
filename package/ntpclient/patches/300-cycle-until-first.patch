--- ntpclient-2007.orig/ntpclient.c	2009-09-20 15:09:04.000000000 +0200
+++ ntpclient-2007/ntpclient.c	2009-09-20 15:08:49.000000000 +0200
@@ -129,6 +129,7 @@
 	int set_clock;   /* non-zero presumably needs root privs */
 	int probe_count;
 	int cycle_time;
+	int cycle_time_until_first;
 	int goodness;
 	int cross_check;
 	char serv_addr[4];
@@ -502,6 +503,7 @@
 	sa_xmit_len=sizeof sa_xmit;
 	to.tv_sec=0;
 	to.tv_usec=0;
+	int first=1;
 	for (;;) {
 		FD_ZERO(&fds);
 		FD_SET(usd,&fds);
@@ -516,7 +518,12 @@
 					ntpc->probe_count != 0) break;
 				send_packet(usd,ntpc->time_of_send);
 				++probes_sent;
-				to.tv_sec=ntpc->cycle_time;
+				if (first!=0) {
+					to.tv_sec=ntpc->cycle_time_until_first;
+				}
+				else {
+					to.tv_sec=ntpc->cycle_time;
+				}
 				to.tv_usec=0;
 			}
 			continue;
@@ -529,6 +536,7 @@
 		} else if (pack_len>0 && (unsigned)pack_len<sizeof_incoming){
 			get_packet_timestamp(usd, &udp_arrival_ntp);
 			if (check_source(pack_len, &sa_xmit, sa_xmit_len, ntpc)!=0) continue;
+			first=0;
 			if (rfc1305print(incoming_word, &udp_arrival_ntp, ntpc, &error)!=0) continue;
 			/* udp_handle(usd,incoming,pack_len,&sa_xmit,sa_xmit_len); */
 		} else {
@@ -591,7 +599,7 @@
 	" [-d]"
 #endif
 	" [-D] [-f frequency] [-g goodness] -h hostname\n"
-	"\t[-i interval] [-l] [-p port] [-q min_delay]"
+	"\t[-i interval] [-j interval] [-l] [-p port] [-q min_delay]"
 #ifdef ENABLE_REPLAY
 	" [-r]"
 #endif
@@ -611,12 +619,13 @@
 	ntpc.live=0;
 	ntpc.set_clock=0;
 	ntpc.probe_count=0;           /* default of 0 means loop forever */
+	ntpc.cycle_time_until_first=60; /* seconds */
 	ntpc.cycle_time=600;          /* seconds */
 	ntpc.goodness=0;
 	ntpc.cross_check=1;
 
 	for (;;) {
-		c = getopt( argc, argv, "c:" DEBUG_OPTION "f:g:h:i:lp:q:" REPLAY_OPTION "stD");
+		c = getopt( argc, argv, "c:" DEBUG_OPTION "f:g:h:i:j:lp:q:" REPLAY_OPTION "stD");
 		if (c == EOF) break;
 		switch (c) {
 			case 'c':
@@ -642,6 +651,9 @@
 			case 'i':
 				ntpc.cycle_time = atoi(optarg);
 				break;
+			case 'j':
+				ntpc.cycle_time_until_first = atoi(optarg);
+				break;
 			case 'l':
 				(ntpc.live)++;
 				break;
@@ -695,13 +707,14 @@
 		"  -g goodness    %d\n"
 		"  -h hostname    %s\n"
 		"  -i interval    %d\n"
+		"  -j interval    %d\n"
 		"  -l live        %d\n"
 		"  -p local_port  %d\n"
 		"  -q min_delay   %f\n"
 		"  -s set_clock   %d\n"
 		"  -x cross_check %d\n",
 		ntpc.probe_count, debug, ntpc.goodness,
-		hostname, ntpc.cycle_time, ntpc.live, udp_local_port, min_delay,
+		hostname, ntpc.cycle_time, ntpc.cycle_time_until_first, ntpc.live, udp_local_port, min_delay,
 		ntpc.set_clock, ntpc.cross_check );
 	}
 
